--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:33:SJ cbx_lpm_add_sub 2013:06:12:18:03:33:SJ cbx_lpm_compare 2013:06:12:18:03:33:SJ cbx_lpm_decode 2013:06:12:18:03:33:SJ cbx_mgl 2013:06:12:18:33:59:SJ cbx_stratix 2013:06:12:18:03:33:SJ cbx_stratixii 2013:06:12:18:03:33:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode271w[1..0]	: WIRE;
	w_anode280w[3..0]	: WIRE;
	w_anode297w[3..0]	: WIRE;
	w_anode307w[3..0]	: WIRE;
	w_anode317w[3..0]	: WIRE;
	w_anode327w[3..0]	: WIRE;
	w_anode337w[3..0]	: WIRE;
	w_anode347w[3..0]	: WIRE;
	w_anode357w[3..0]	: WIRE;
	w_anode369w[1..0]	: WIRE;
	w_anode376w[3..0]	: WIRE;
	w_anode387w[3..0]	: WIRE;
	w_anode397w[3..0]	: WIRE;
	w_anode407w[3..0]	: WIRE;
	w_anode417w[3..0]	: WIRE;
	w_anode427w[3..0]	: WIRE;
	w_anode437w[3..0]	: WIRE;
	w_anode447w[3..0]	: WIRE;
	w_data269w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode447w[3..3], w_anode437w[3..3], w_anode427w[3..3], w_anode417w[3..3], w_anode407w[3..3], w_anode397w[3..3], w_anode387w[3..3], w_anode376w[3..3]), ( w_anode357w[3..3], w_anode347w[3..3], w_anode337w[3..3], w_anode327w[3..3], w_anode317w[3..3], w_anode307w[3..3], w_anode297w[3..3], w_anode280w[3..3]));
	w_anode271w[] = ( (w_anode271w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode280w[] = ( (w_anode280w[2..2] & (! w_data269w[2..2])), (w_anode280w[1..1] & (! w_data269w[1..1])), (w_anode280w[0..0] & (! w_data269w[0..0])), w_anode271w[1..1]);
	w_anode297w[] = ( (w_anode297w[2..2] & (! w_data269w[2..2])), (w_anode297w[1..1] & (! w_data269w[1..1])), (w_anode297w[0..0] & w_data269w[0..0]), w_anode271w[1..1]);
	w_anode307w[] = ( (w_anode307w[2..2] & (! w_data269w[2..2])), (w_anode307w[1..1] & w_data269w[1..1]), (w_anode307w[0..0] & (! w_data269w[0..0])), w_anode271w[1..1]);
	w_anode317w[] = ( (w_anode317w[2..2] & (! w_data269w[2..2])), (w_anode317w[1..1] & w_data269w[1..1]), (w_anode317w[0..0] & w_data269w[0..0]), w_anode271w[1..1]);
	w_anode327w[] = ( (w_anode327w[2..2] & w_data269w[2..2]), (w_anode327w[1..1] & (! w_data269w[1..1])), (w_anode327w[0..0] & (! w_data269w[0..0])), w_anode271w[1..1]);
	w_anode337w[] = ( (w_anode337w[2..2] & w_data269w[2..2]), (w_anode337w[1..1] & (! w_data269w[1..1])), (w_anode337w[0..0] & w_data269w[0..0]), w_anode271w[1..1]);
	w_anode347w[] = ( (w_anode347w[2..2] & w_data269w[2..2]), (w_anode347w[1..1] & w_data269w[1..1]), (w_anode347w[0..0] & (! w_data269w[0..0])), w_anode271w[1..1]);
	w_anode357w[] = ( (w_anode357w[2..2] & w_data269w[2..2]), (w_anode357w[1..1] & w_data269w[1..1]), (w_anode357w[0..0] & w_data269w[0..0]), w_anode271w[1..1]);
	w_anode369w[] = ( (w_anode369w[0..0] & data_wire[3..3]), enable_wire);
	w_anode376w[] = ( (w_anode376w[2..2] & (! w_data269w[2..2])), (w_anode376w[1..1] & (! w_data269w[1..1])), (w_anode376w[0..0] & (! w_data269w[0..0])), w_anode369w[1..1]);
	w_anode387w[] = ( (w_anode387w[2..2] & (! w_data269w[2..2])), (w_anode387w[1..1] & (! w_data269w[1..1])), (w_anode387w[0..0] & w_data269w[0..0]), w_anode369w[1..1]);
	w_anode397w[] = ( (w_anode397w[2..2] & (! w_data269w[2..2])), (w_anode397w[1..1] & w_data269w[1..1]), (w_anode397w[0..0] & (! w_data269w[0..0])), w_anode369w[1..1]);
	w_anode407w[] = ( (w_anode407w[2..2] & (! w_data269w[2..2])), (w_anode407w[1..1] & w_data269w[1..1]), (w_anode407w[0..0] & w_data269w[0..0]), w_anode369w[1..1]);
	w_anode417w[] = ( (w_anode417w[2..2] & w_data269w[2..2]), (w_anode417w[1..1] & (! w_data269w[1..1])), (w_anode417w[0..0] & (! w_data269w[0..0])), w_anode369w[1..1]);
	w_anode427w[] = ( (w_anode427w[2..2] & w_data269w[2..2]), (w_anode427w[1..1] & (! w_data269w[1..1])), (w_anode427w[0..0] & w_data269w[0..0]), w_anode369w[1..1]);
	w_anode437w[] = ( (w_anode437w[2..2] & w_data269w[2..2]), (w_anode437w[1..1] & w_data269w[1..1]), (w_anode437w[0..0] & (! w_data269w[0..0])), w_anode369w[1..1]);
	w_anode447w[] = ( (w_anode447w[2..2] & w_data269w[2..2]), (w_anode447w[1..1] & w_data269w[1..1]), (w_anode447w[0..0] & w_data269w[0..0]), w_anode369w[1..1]);
	w_data269w[2..0] = data_wire[2..0];
END;
--VALID FILE
